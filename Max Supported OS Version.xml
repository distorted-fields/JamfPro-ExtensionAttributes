<?xml version="1.0" encoding="UTF-8"?><extensionAttribute>
<displayName>Max Supported OS Version</displayName>
<description/>
<dataType>number</dataType>
<scriptContentsMac>#!/bin/bash&#13;
#&#13;
#&#13;
#     Created by A.Hodgson&#13;
#      Date: 12/03/2019&#13;
#      Purpose: Report the max compatible OS for a Mac model based on regex values&#13;
#  &#13;
#&#13;
######################################&#13;
maxOS="0.0"&#13;
&#13;
# Get Model Identifier&#13;
myModel=$(system_profiler SPHardwareDataType | grep "Model Identifier" | awk '{print $3}')&#13;
&#13;
# Regex Compatible Macs&#13;
SierraRegEx="(MacBookAir[3-7]|MacBookPro(6|7|8|9|1[0-2])|MacPro(5|6)|iMac1[0-7]|MacBook(6|7|8|9)|Macmini[4-7]),.*"&#13;
HighSierraRegEx="(MacBookAir[3-7]|MacBookPro(6|7|8|9|1[0-4])|MacPro(5|6)|iMac(Pro)?1[0-8]?|MacBook(6|7|8|9|10)|Macmini[4-7]),.*"&#13;
MojaveRegEx="(MacBookAir[5-8]|MacBookPro(9|1[0-5])|MacPro(5|6)|iMac(Pro)?1[3-9]?|MacBook(10|9|8)|Macmini[6-8]),.*"&#13;
CatalinaRegEx="(MacBookAir[5-8]|MacBookPro(9|1[0-6])|MacPro6|iMac(Pro)?1[3-9]?|MacBook(10|9|8)|Macmini[6-8]),.*"&#13;
&#13;
# Compare Model Identifier against High Sierra Regex compatible Macs&#13;
if [[ $myModel =~ $SierraRegEx ]]; then&#13;
	maxOS="10.12"&#13;
fi&#13;
# Compare Model Identifier against High Sierra Regex compatible Macs&#13;
if [[ $myModel =~ $HighSierraRegEx ]]; then&#13;
	maxOS="10.13"&#13;
fi&#13;
# Compare Model Identifier against Mojave Regex compatible Macs&#13;
if [[ $myModel =~ $MojaveRegEx ]]; then&#13;
	maxOS="10.14"&#13;
fi&#13;
# Compare Model Identifier against Catalina Regex compatible Macs&#13;
if [[ $myModel =~ $CatalinaRegEx ]]; then&#13;
	maxOS="10.15"&#13;
fi&#13;
# If maxOS is still 0.0 - mark as an unsupported device&#13;
if [ "$maxOS" == "0.0" ]; then&#13;
	maxOS="Unsupported Device"&#13;
fi&#13;
&#13;
&#13;
echo "&lt;result&gt;$maxOS&lt;/result&gt;"&#13;
&#13;
#exit script gracefully&#13;
exit 0 </scriptContentsMac>
</extensionAttribute>
